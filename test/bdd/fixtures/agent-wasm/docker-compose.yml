#
# Copyright SecureKey Technologies Inc. All Rights Reserved.
#
# SPDX-License-Identifier: Apache-2.0
#
version: '2'

services:

  edge.router.agent.example.com:
    container_name: edge.router.agent.example.com
    image: ${AGENT_REST_IMAGE}:${AGENT_REST_IMAGE_TAG}
    environment:
      - ARIESD_API_HOST=${EDGE_ROUTER_HOST}:${EDGE_ROUTER_API_PORT}
      - ARIESD_INBOUND_HOST=${HTTP_SCHEME}@${EDGE_ROUTER_HOST}:${EDGE_ROUTER_HTTP_INBOUND_PORT},${WS_SCHEME}@${EDGE_ROUTER_HOST}:${EDGE_ROUTER_WS_INBOUND_PORT}
      - ARIESD_INBOUND_HOST_EXTERNAL=${HTTP_SCHEME}@https://localhost:${EDGE_ROUTER_HTTP_INBOUND_PORT},${WS_SCHEME}@wss://localhost:${EDGE_ROUTER_WS_INBOUND_PORT}
      - ARIESD_DB_PATH=${EDGE_ROUTER_DB_PATH}
      - ARIESD_DEFAULT_LABEL=edge-router-agent
      - ARIESD_OUTBOUND_TRANSPORT=${HTTP_SCHEME},${WS_SCHEME}
      - ARIESD_AUTO_ACCEPT=${EDGE_ROUTER_AUTOACCEPT}
      - TLS_CERT_FILE=/etc/tls/ec-pubCert.pem
      - TLS_KEY_FILE=/etc/tls/ec-key.pem
    volumes:
      - ../keys/tls:/etc/tls
      - ../db:/tmp/db
    ports:
      - ${EDGE_ROUTER_HTTP_INBOUND_PORT}:${EDGE_ROUTER_HTTP_INBOUND_PORT}
      - ${EDGE_ROUTER_WS_INBOUND_PORT}:${EDGE_ROUTER_WS_INBOUND_PORT}
      - ${EDGE_ROUTER_API_PORT}:${EDGE_ROUTER_API_PORT}
    command: start

  edge.router.agent2.example.com:
    container_name: edge.router.agent2.example.com
    image: ${AGENT_REST_IMAGE}:${AGENT_REST_IMAGE_TAG}
    environment:
      - ARIESD_API_HOST=${EDGE_ROUTER2_HOST}:${EDGE_ROUTER2_API_PORT}
      - ARIESD_INBOUND_HOST=${HTTP_SCHEME}@${EDGE_ROUTER2_HOST}:${EDGE_ROUTER2_HTTP_INBOUND_PORT},${WS_SCHEME}@${EDGE_ROUTER2_HOST}:${EDGE_ROUTER2_WS_INBOUND_PORT}
      - ARIESD_INBOUND_HOST_EXTERNAL=${HTTP_SCHEME}@https://localhost:${EDGE_ROUTER2_HTTP_INBOUND_PORT},${WS_SCHEME}@wss://localhost:${EDGE_ROUTER2_WS_INBOUND_PORT}
      - ARIESD_DB_PATH=${EDGE_ROUTER2_DB_PATH}
      - ARIESD_DEFAULT_LABEL=edge-router-agent
      - ARIESD_OUTBOUND_TRANSPORT=${HTTP_SCHEME},${WS_SCHEME}
      - ARIESD_AUTO_ACCEPT=${EDGE_ROUTER2_AUTOACCEPT}
      - TLS_CERT_FILE=/etc/tls/ec-pubCert.pem
      - TLS_KEY_FILE=/etc/tls/ec-key.pem
    volumes:
      - ../keys/tls:/etc/tls
      - ../db:/tmp/db
    ports:
      - ${EDGE_ROUTER2_HTTP_INBOUND_PORT}:${EDGE_ROUTER2_HTTP_INBOUND_PORT}
      - ${EDGE_ROUTER2_WS_INBOUND_PORT}:${EDGE_ROUTER2_WS_INBOUND_PORT}
      - ${EDGE_ROUTER2_API_PORT}:${EDGE_ROUTER2_API_PORT}
    command: start

  user.agent.example.com:
    container_name: user.agent.example.com
    image: ${USER_WASM_IMAGE}:latest
    environment:
      - HTTP_SERVER_HOST_URL=0.0.0.0:8091
      - ARIESD_HTTP_RESOLVER=${HTTP_RESOLVER}
      - TLS_CERT_FILE=/etc/tls/ec-pubCert.pem
      - TLS_KEY_FILE=/etc/tls/ec-key.pem
      - ARIESD_DEFAULT_LABEL=user-agent
      - BLOC_DOMAIN=testnet.trustbloc.local
      - WALLET_MEDIATOR_URL=${WALLET_ROUTER_URL}
      - CREDENTIAL_MEDIATOR_URL=https://${CREDENTIAL_MEDIATOR_HOST}:${CREDENTIAL_MEDIATOR_HTTPS_PORT}/mediator
      - HTTP_SERVER_SDS_URL=${HTTP_SERVER_SDS_URL}
    ports:
      - 8091:8091
    volumes:
      - ../keys/tls:/etc/tls
    command: start
    depends_on:
      - sds.example.com

  second.user.agent.example.com:
    container_name: second.user.agent.example.com
    image: ${USER_WASM_IMAGE}:latest
    environment:
      - HTTP_SERVER_HOST_URL=0.0.0.0:8071
      - ARIESD_HTTP_RESOLVER=${HTTP_RESOLVER}
      - TLS_CERT_FILE=/etc/tls/ec-pubCert.pem
      - TLS_KEY_FILE=/etc/tls/ec-key.pem
      - ARIESD_DEFAULT_LABEL=second-user-agent
      - BLOC_DOMAIN=testnet.trustbloc.local
      - WALLET_MEDIATOR_URL=${WALLET_ROUTER_URL}
      - CREDENTIAL_MEDIATOR_URL=https://${CREDENTIAL_MEDIATOR_HOST}:${CREDENTIAL_MEDIATOR_HTTPS_PORT}/mediator
      - HTTP_SERVER_SDS_URL=${HTTP_SERVER_SDS_URL}
    ports:
      - 8071:8071
    volumes:
      - ../keys/tls:/etc/tls
    command: start
    depends_on:
      - sds.example.com

  couchdb.example.com:
    container_name: couchdb.example.com
    image: ${COUCHDB_IMAGE}:${COUCHDB_IMAGE_TAG}
    ports:
      - ${COUCHDB_PORT}:${COUCHDB_PORT}

  sds.example.com:
    container_name: sds.example.com
    image: ${SDS_REST_IMAGE}:${SDS_REST_IMAGE_TAG}
    environment:
      - EDV_HOST_URL=${SDS_HOST}:${SDS_PORT}
      - EDV_DATABASE_TYPE=${SDS_DATABASE_TYPE}
      - EDV_DATABASE_URL=${SDS_DATABASE_URL}
      - EDV_DATABASE_PREFIX=${SDS_DATABASE_PREFIX}
      - EDV_LOG_LEVEL=debug
      - EDV_TLS_CERT_FILE=/etc/tls/ec-pubCert.pem
      - EDV_TLS_KEY_FILE=/etc/tls/ec-key.pem
    ports:
      - ${SDS_PORT}:${SDS_PORT}
    volumes:
      - ../keys/tls:/etc/tls
    command: start
    depends_on:
      - couchdb.example.com

  sidetree:
    container_name: sidetree-mock
    hostname: sidetree-mock
    image: ${SIDETREE_MOCK_IMAGE}:${SIDETREE_MOCK_IMAGE_TAG}
    environment:
      - SIDETREE_MOCK_TLS_CERTIFICATE=/etc/sidetree/tls/ec-pubCert.pem
      - SIDETREE_MOCK_TLS_KEY=/etc/sidetree/tls/ec-key.pem
      - SIDETREE_MOCK_HOST=0.0.0.0
      - SIDETREE_MOCK_PORT=48326
      - SIDETREE_MOCK_DID_NAMESPACE=did:trustbloc:testnet.trustbloc.local
    ports:
      - 48326:48326
    volumes:
      - ../keys/tls:/etc/sidetree/tls


  testnet.trustbloc.local:
    container_name: testnet.trustbloc.local
    hostname: testnet.trustbloc.local
    image: halverneus/static-file-server:v1.7.2
    environment:
      - PORT=443
      - FOLDER=/web
      - CORS=true
      - DEBUG=true
      - TLS_CERT=/etc/tls/ec-pubCert.pem
      - TLS_KEY=/etc/tls/ec-key.pem
    ports:
      - "443:443"
    volumes:
      - ./config:/web/.well-known/did-trustbloc
      - ../keys/tls:/etc/tls

  stakeholder.one:
    container_name: stakeholder.one
    hostname: stakeholder.one
    image: halverneus/static-file-server:v1.7.2
    environment:
      - PORT=8088
      - FOLDER=/web
      - CORS=true
      - TLS_CERT=/etc/tls/ec-pubCert.pem
      - TLS_KEY=/etc/tls/ec-key.pem
    ports:
      - "8088:8088"
    volumes:
      - ./config:/web/.well-known/did-trustbloc
      - ../keys/tls:/etc/tls


  dns-proxy-server:
    image: defreitas/dns-proxy-server:latest
    hostname: dns.mageddo
    ports:
      - "5380:5380"
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - /etc/resolv.conf:/etc/resolv.conf

  uni-resolver-web:
    image: universalresolver/uni-resolver-web:latest
    ports:
      - "9080:8080"
    volumes:
      - ./config.json:/opt/uni-resolver-java/uni-resolver-web/config.json
      - ./run-uni-resolver-web.sh:/opt/uni-resolver-java/uni-resolver-web/docker/run-uni-resolver-web.sh

  uni-resolver-did-v1-driver:
    image: veresone/uni-resolver-did-v1-driver:latest
    ports:
      - "8084:8080"

  trustbloc.did.method.example.com:
    container_name: trustbloc.did.method.example.com
    image: ${BLOC_DID_METHOD_IMAGE}:${BLOC_DID_METHOD_IMAGE_TAG}
    environment:
      - DID_METHOD_HOST_URL=0.0.0.0:8060
      - DID_METHOD_TLS_CACERTS=/etc/tls/ec-cacert.pem
      - DID_METHOD_DOMAIN=testnet.trustbloc.local
      - DID_METHOD_DATABASE_TYPE=mem
      - DID_METHOD_DATABASE_PREFIX=driver
    ports:
      - 8060:8060
    entrypoint: ""
    command:  /bin/sh -c "sleep 10;did-method start"
    volumes:
      - ../keys/tls:/etc/tls

  authorization.localhost:
    container_name: ${CREDENTIAL_MEDIATOR_HOST}
    image: ${CREDENTIAL_MEDIATOR_IMAGE}:latest
    environment:
      - TLS_CERT_FILE=/etc/tls/ec-pubCert.pem
      - TLS_KEY_FILE=/etc/tls/ec-key.pem
      - REGISTRATION_URL=https://localhost:8091/dashboard
    ports:
      - ${CREDENTIAL_MEDIATOR_HTTPS_PORT}:${CREDENTIAL_MEDIATOR_HTTPS_PORT}
      - ${CREDENTIAL_MEDIATOR_HTTP_PORT}:${CREDENTIAL_MEDIATOR_HTTP_PORT}
    volumes:
      - ../keys/tls:/etc/tls

